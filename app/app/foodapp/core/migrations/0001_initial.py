# Generated by Django 4.0.3 on 2022-03-15 17:34

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Catalog_Restaurant_Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catalog_serial', models.CharField(blank=True, default='', max_length=1, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('alergy', models.CharField(choices=[('A', 'Cereals containing gluten'), ('B', 'Crustaceans'), ('C', 'Eggs'), ('D', 'Fish'), ('E', 'Peanuts'), ('F', 'Soja'), ('G', 'Milk and/or lactose'), ('H', 'Nuts'), ('N', 'No')], default='N', help_text='Allergy code', max_length=1)),
                ('quantity', models.FloatField(default=1)),
                ('units', models.CharField(choices=[('mg', 'milligram'), ('g', 'gram'), ('kg', 'kilogram'), ('lb', 'pound'), ('oz', 'ounce'), ('tsp', 'teaspoon'), ('tbs', 'tablespoon'), ('cup', 'cup'), ('pt', 'pint'), ('ml', 'milliliter'), ('l', 'liter'), ('dl', 'deciliter'), ('uni', 'Unit')], default='uni', help_text='Measurement unit', max_length=3)),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('res_type', models.CharField(choices=[('Vegi', 'Vegetarian'), ('Vegn', 'Vegan'), ('Pesc', 'Pescetarian'), ('Hlal', 'Halal'), ('Kosh', 'Kosher'), ('Gltf', 'Gluten-Free'), ('Stnd', 'Standard')], default='Stnd', help_text='Restaurant type', max_length=4)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Restaurant_Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('number_table', models.CharField(default='', max_length=9)),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_table', to='core.restaurant')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('reservation_code', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservation_customer', to='core.customer')),
                ('table_restaurant', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservation_table', to='core.restaurant_table')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('recipe_type', models.CharField(choices=[('F', 'Food'), ('D', 'Drink')], default='F', help_text='Food or drink?', max_length=1)),
                ('ingredients', models.ManyToManyField(blank=True, related_name='ingredients', to='core.ingredient')),
                ('restaurant_recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_recipe', to='core.restaurant')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.AddConstraint(
            model_name='ingredient',
            constraint=models.UniqueConstraint(fields=('name', 'quantity', 'units'), name='name_quantity_units'),
        ),
        migrations.AddField(
            model_name='catalog_restaurant_table',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_restaurant_table', to='core.restaurant'),
        ),
        migrations.AddField(
            model_name='catalog_restaurant_table',
            name='table_restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='table_restaurant_table', to='core.restaurant_table'),
        ),
        migrations.AddConstraint(
            model_name='restaurant_table',
            constraint=models.UniqueConstraint(fields=('restaurant', 'number_table'), name='restaurant_table_code'),
        ),
        migrations.AddConstraint(
            model_name='reservation',
            constraint=models.UniqueConstraint(fields=('table_restaurant', 'date'), name='table_restaurant_date'),
        ),
        migrations.AddConstraint(
            model_name='catalog_restaurant_table',
            constraint=models.UniqueConstraint(fields=('restaurant', 'table_restaurant'), name='catalog_restaurant_table'),
        ),
    ]
