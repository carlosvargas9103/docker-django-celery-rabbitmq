version: "3.9"
services:

  db:
    container_name: db
    restart: unless-stopped
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=restaurantdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "sh", "-c", "pg_isready -U $$POSTGRES_USER -h $$(hostname -i) -d wpm_docker"]
      interval: 10s
      timeout: 10s
      retries: 6
  
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 10s
      retries: 6

  django:
    container_name: django
    restart: unless-stopped
    build:
      context: ./app
    ports:
      - 9000:9000
    env_file: 
      - ./.env.dev
    volumes:
      - ./app/app/foodapp:/app
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOST=localhost 127.0.0.1 0.0.0.0
      - CELERY_BROKER=amqp://rabbitmq:5672
      - CELERY_BACKEND=redis://redis:6379/0
    command: 
      sh -c "python manage.py migrate &&
      python manage.py create-superadmin &&
      python manage.py runserver 0.0.0.0:9000"
    depends_on:
      db:
          condition: service_healthy
      redis:
          condition: service_healthy

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 5672:5672
      - 15672:15672  # To access RabbitMQ management plugin
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  celery:
    container_name: celery
    restart: unless-stopped
    build:
      context: ./app
    command: celery -A core worker -l INFO
    volumes:
      - ./app/app/foodapp:/app
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - django
      - rabbitmq

volumes:
  pgdata: